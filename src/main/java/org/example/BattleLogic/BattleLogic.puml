@startuml
'https://plantuml.com/sequence-diagram

'open at https://sequencediagram.org/

title Monster Trading Cards Game - Battle Logic

!define SERVER_BLUE #3498DB
!define PLAYER_YELLOW #F4D03F
!define DATABASE_PURPLE #9B59B6

skinparam participant {
    BackgroundColor SERVER_BLUE
    BorderColor Black
}

skinparam actor {
    BackgroundColor PLAYER_YELLOW
    BorderColor Black
}

skinparam database {
    BackgroundColor DATABASE_PURPLE
    BorderColor Black
}

actor "Player A" as PlayerA
actor "Player B" as PlayerB
participant "Battle Server" as Server
database "Card Database" as Database

PlayerA -> Server: Request to Start Battle with Token\n(Enters Lobby & Waits until other User enters Lobby)
activate Server

PlayerB -> Server: Request to Start Battle with Token\n(Enters Lobby & Battle starts immediately)

Server -> Database: Request to Build up Deck Array for Player A
activate Database
Server -> Database: Request to Build up Deck Array for Player B
Database --> Server: Build up Deck Array Player A
Database --> Server: Build up Deck Array Player B
deactivate Database

loop Multiple Rounds (max. 100)

PlayerA -> Server: Request to get Random Card from own Deck (Player A)
    activate PlayerA
    Server -->PlayerA: Send Random Card from Player A's Deck
    deactivate PlayerA

    PlayerB -> Server: Request to get Random Card from own Deck (Player B)
    activate PlayerB
    Server -->PlayerB: Send Random Card from Player B's Deck
    deactivate PlayerB


alt ElementType has no effect (Monster vs Monster)
PlayerA -> Server: Play Monster Card\n(WaterGoblin)
        activate PlayerA
        Server --> PlayerA: Apply Specialty
        Server --> PlayerA: Calculate Damage\n(BaseDamage)

        PlayerB -> Server: Play Monster Card\n(FireTroll)
        activate PlayerB
        Server --> PlayerB: Apply Specialty
        Server --> PlayerB: Calculate Damage\n(BaseDamage)

        PlayerA <-> PlayerB: Compare Damage\n(WaterGoblin vs FireTroll)

        deactivate PlayerA
        deactivate PlayerB

else ElementType has effect (Spell vs Monster / Monster vs Spell / Spell vs Spell)
alt No Effect (Normal Monster vs Normal Spell)
PlayerA -> Server: Play Monster Card\n(RegularGoblin)
            activate PlayerA
            Server --> PlayerA: Apply Specialty
            Server --> PlayerA: Calculate Damage\n(BaseDamage)

            PlayerB -> Server: Play Spell Card\n(RegularSpell)
            activate PlayerB
            Server --> PlayerB: Apply Specialty
            Server --> PlayerB: Calculate Damage\n(BaseDamage)

            PlayerA <-> PlayerB: Compare Damage\n(RegularGoblin vs RegularSpell)

            deactivate PlayerA
            deactivate PlayerB

else Effective Spell (Water Spell vs Fire Monster)
PlayerA -> Server: Play Monster Card\n(WaterSpell)
            activate PlayerA
            Server --> PlayerA: Apply Specialty
            Server --> PlayerA: Calculate Damage\n(DoubleDamage)

            PlayerB -> Server: Play Spell Card\n(FireElf)
            activate PlayerB
            Server --> PlayerB: Apply Specialty
            Server --> PlayerB: Calculate Damage\n(HalvedDamage)

            PlayerA <-> PlayerB: Compare Damage\n(WaterSpell vs FireElf)

            deactivate PlayerA
            deactivate PlayerB

else Not Effective Spell (Fire Spell vs Water Monster)
PlayerA -> Server: Play Monster Card\n(FireSpell)
            activate PlayerA
            Server --> PlayerA: Calculate Damage\n(HalvedDamage)
            Server --> PlayerA: Apply Specialty

            PlayerB -> Server: Play Spell Card\n(WaterTroll)
            activate PlayerB
            Server --> PlayerB: Apply Specialty
            Server --> PlayerB: Calculate Damage\n(DoubleDamage)

            PlayerA <-> PlayerB: Compare Damage\n(FireSpell vs WaterTroll)

            deactivate PlayerA
            deactivate PlayerB

end
end

alt Player A wins
PlayerA -> Server: Request Card from Player B's Deck\n(After Battle)
        activate PlayerA
        PlayerB -> Server: Lose Card from Deck\n(After Battle)
        activate PlayerB
        Server --> PlayerA: Send Card from Player B's Deck\n(After Battle)
        PlayerA --> Database: Update ELO Score\n(+3 points for win)
        activate Database
        PlayerB --> Database: Update ELO Score\n(-5 points for loss)
        PlayerA --> Database: Add +1 to wins
        PlayerB --> Database: Add +1 to losses
        deactivate PlayerA
        deactivate PlayerB

        Server -> Database: Send Round Result to the DB
        Server -> Database: Send Round Details to the DB (Player A)
        Server -> Database: Send Round Details to the DB (Player B)
        deactivate Database

else Player B wins
PlayerB -> Server: Request Card from Player A's Deck\n(After Battle)
        activate PlayerB
        PlayerA -> Server: Lose Card from Deck\n(After Battle)
        activate PlayerA
        Server --> PlayerB: Send Card from Player A's Deck\n(After Battle)
        PlayerB --> Database: Update ELO Score\n(+3 points for win)
        activate Database
        PlayerA --> Database: Update ELO Score\n(-5 points for loss)
        PlayerB --> Database: Add +1 to wins
        PlayerA --> Database: Add +1 to losses
        deactivate PlayerB
        deactivate PlayerA

        Server -> Database: Send Round Result to the DB
        Server -> Database: Send Round Details to the DB (Player A)
        Server -> Database: Send Round Details to the DB (Player B)
        deactivate Database

else draw
box over PlayerA,PlayerB:No Action

end
end

Server -> Database: Remove All Cards from Deck (Player A)
activate Database
Server -> Database: Remove All Cards from Deck (Player B)
Server -> Database: Move All Cards from Deck Array to Stack (Player A)
Server -> Database: Move All Cards from Deck Array to Stack (Player B)
Database --> PlayerA: Send Battle Log to describe the Battle in Detail
Database --> PlayerB: Send Battle Log to describe the Battle in Detail
deactivate Database
deactivate Server

@enduml